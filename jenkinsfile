pipeline {
  agent any

  environment {
    AWS_REGION = "ap-south-1"
    ECR_REPO   = "<aws_account_id>.dkr.ecr.ap-south-1.amazonaws.com/python-app-repo"
    IMAGE_TAG  = "latest"
  }

  stages {
    stage('Checkout') {
      steps {
        git url: 'https://github.com/yourusername/python-app.git'
      }
    }

    stage('Login to ECR') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'awscred',
          usernameVariable: 'AWS_ACCESS_KEY_ID',
          passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {

          sh '''
            aws ecr get-login-password --region $AWS_REGION | \
              docker login --username AWS --password-stdin $ECR_REPO
          '''
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        sh '''
          docker build -t python-app .
          docker tag python-app:latest $ECR_REPO:$IMAGE_TAG
        '''
      }
    }

    stage('Push to ECR') {
      steps {
        sh 'docker push $ECR_REPO:$IMAGE_TAG'
      }
    }

    stage('Deploy to EKS') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'awscred',
          usernameVariable: 'AWS_ACCESS_KEY_ID',
          passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {

          sh '''
            aws eks update-kubeconfig --region $AWS_REGION --name my-eks-cluster
            sed "s|<your-ecr-url>|$ECR_REPO|g" k8s_deploy.yaml | kubectl apply -f -
          '''
        }
      }
    }
  }
}
